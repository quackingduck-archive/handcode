--- !hc1

# mach-o object generated with
# $ cc -g -c -x c -o macho.o -  <<< 'int foo() { return 42; }'

# run this command to check that hadcoded binary matches original
# $ cmp <(hc macho.o.1.yml) macho.o

# structures defined in /usr/include/mach-o/loader.h

- !assert-index 0

# <header> : struct mach_header_64
- !hex cf fa ed fe # magic number
# cpu specifier (defined in /usr/include/mach/machine.h )
- !bin |oooo'oxxx|oooo'oooo|oooo'oooo|oooo'ooox|
#             ^^^                             ^- CPU_ARCH_ABI64 (7)
#               `------------------------------- CPU_TYPE_X86 (1)
# machine specifier (defined in /usr/include/mach/machine.h )
- !bin |oooo'ooxx|oooo'oooo|oooo'oooo|oooo'oooo|
#              ^^------------------------------- CPU_SUBTYPE_I386_ALL (3)
- !hex 01 00 00 00 # type of file
- !hex 04 00 00 00 # number of load commands
- !hex 70 05 00 00 # size of load commands
- !hex 00 20 00 00 # flags
- !hex 00 00 00 00 # reserved

- !assert-index 32

# load command (lc) 0 : struct segment_command_64
- !hex 19 00 00 00 # LC_SEGMENT_64
- !hex f8 04 00 00 # command size
- !hex 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 # segment name
- !hex 00 00 00 00 00 00 00 00 # mem addr of segment
- !hex 6d 02 00 00 00 00 00 00 # mem size of segment
- !hex 90 05 00 00 00 00 00 00 # file offset of segment (1424)
- !hex 6d 02 00 00 00 00 00 00 # file size of segment (amount to map into mem)
- !hex 07 00 00 00 # maximum VM protection
- !hex 07 00 00 00 # initial VM protection
- !hex 0f 00 00 00 # number of sections in segment (15)
- !hex 00 00 00 00 # flags

- !assert-index 104

# lc 0 section 0 : struct section_64
- !hex 5f 5f 74 65 78 74 00 00 00 00 00 00 00 00 00 00 # section name
- !hex 5f 5f 54 45 58 54 00 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 00 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 0b 00 00 00 00 00 00 00 # size
- !hex 90 05 00 00 # file offset (1424)
- !hex 04 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 04 00 80 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 184

# lc 1 section 1 : struct section_64
- !hex 5f 5f 64 65 62 75 67 5f 73 74 72 00 00 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 0b 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 51 00 00 00 00 00 00 00 # size
- !hex 9b 05 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 264

# lc 1 section 2 : struct section_64
- !hex 5f 5f 64 65 62 75 67 5f 6c 6f 63 00 00 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 5c 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 00 00 00 00 00 00 00 00 # size
- !hex ec 05 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 344

# lc 1 section 3 : struct section_64
- !hex 5f 5f 64 65 62 75 67 5f 61 62 62 72 65 76 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 5c 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 34 00 00 00 00 00 00 00 # size
- !hex ec 05 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 424

# lc 1 section 4 : struct section_64
- !hex 5f 5f 64 65 62 75 67 5f 69 6e 66 6f 00 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 90 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 4b 00 00 00 00 00 00 00 # size
- !hex 20 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 08 00 00 # file offset of relocation entires
- !hex 02 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

# lc 1 section 5 : struct section_64
- !assert-index 504
- !hex 5f 5f 64 65 62 75 67 5f 72 61 6e 67 65 73 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex db 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 00 00 00 00 00 00 00 00 # size
- !hex 6b 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

# lc 1 section 6 : struct section_64
- !assert-index 584
- !hex 5f 5f 64 65 62 75 67 5f 6d 61 63 69 6e 66 6f 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex db 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 01 00 00 00 00 00 00 00 # size
- !hex 6b 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

# lc 1 section 7 : struct section_64
- !assert-index 664
- !hex 5f 5f 61 70 70 6c 65 5f 6e 61 6d 65 73 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex dc 00 00 00 00 00 00 00 # mem addr of this sect
- !hex 3c 00 00 00 00 00 00 00 # size
- !hex 6c 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

# lc 1 section 8 : struct section_64
- !assert-index 744
- !hex 5f 5f 61 70 70 6c 65 5f 6f 62 6a 63 00 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 18 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 24 00 00 00 00 00 00 00 # size
- !hex a8 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 824

# lc 1 section 9 : struct section_64
- !hex 5f 5f 61 70 70 6c 65 5f 6e 61 6d 65 73 70 61 63 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 3c 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 24 00 00 00 00 00 00 00 # size
- !hex cc 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 904

# lc 1 section 10 : struct section_64
- !hex 5f 5f 61 70 70 6c 65 5f 74 79 70 65 73 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 60 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 47 00 00 00 00 00 00 00 # size
- !hex f0 06 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 984

# lc 1 section 11 : struct section_64
- !hex 5f 5f 61 70 70 6c 65 5f 65 78 74 74 79 70 65 73 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex a7 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 24 00 00 00 00 00 00 00 # size
- !hex 37 07 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 1064

# lc 1 section 12 : struct section_64
- !hex 5f 5f 63 6f 6d 70 61 63 74 5f 75 6e 77 69 6e 64 # section name
- !hex 5f 5f 4c 44 00 00 00 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex d0 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 20 00 00 00 00 00 00 00 # size
- !hex 60 07 00 00 # file offset
- !hex 03 00 00 00 # section alignment (power of 2)
- !hex 10 08 00 00 # file offset of relocation entires
- !hex 01 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 1144

# lc 1 section 13 : struct section_64
- !hex 5f 5f 65 68 5f 66 72 61 6d 65 00 00 00 00 00 00 # section name
- !hex 5f 5f 54 45 58 54 00 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex f0 01 00 00 00 00 00 00 # mem addr of this sect
- !hex 40 00 00 00 00 00 00 00 # size
- !hex 80 07 00 00 # file offset
- !hex 03 00 00 00 # section alignment (power of 2)
- !hex 00 00 00 00 # file offset of relocation entires
- !hex 00 00 00 00 # number of relocation entires
- !hex 0b 00 00 68 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 1224

# lc 1 section 14 : struct section_64
- !hex 5f 5f 64 65 62 75 67 5f 6c 69 6e 65 00 00 00 00 # section name
- !hex 5f 5f 44 57 41 52 46 00 00 00 00 00 00 00 00 00 # parent segment name
- !hex 30 02 00 00 00 00 00 00 # mem addr of this sect
- !hex 3d 00 00 00 00 00 00 00 # size
- !hex c0 07 00 00 # file offset
- !hex 00 00 00 00 # section alignment (power of 2)
- !hex 18 08 00 00 # file offset of relocation entires
- !hex 01 00 00 00 # number of relocation entires
- !hex 00 00 00 02 # flags (section type and attributes)
- !hex 00 00 00 00 # reserved (for offset or index)
- !hex 00 00 00 00 # reserved (for count or sizeof)
- !hex 00 00 00 00 # reserved

- !assert-index 1304

# load command 2 : version_min_command
- !hex 24 00 00 00 # LC_VERSION_MIN_MACOSX
- !hex 10 00 00 00 # size (16 bytes)
- !hex 00 0c 0a 00 # version
- !hex 00 00 00 00 # sdk

- !assert-index 1320

# load command 3 : symtab_command
- !hex 02 00 00 00 # LC_SYMTAB - symbol table
- !hex 18 00 00 00 # size (24 bytes)
- !hex 20 08 00 00 # symbol table offset
- !hex 01 00 00 00 # number of symbol table entries
- !hex 30 08 00 00 # string table offset
- !hex 08 00 00 00 # string table size in bytes

- !assert-index 1344

# load command 4 : struct dysymtab_command
- !hex 0b 00 00 00 # LC_DYSYMTAB
- !hex 50 00 00 00 # size (80 bytes)
- !hex 00 00 00 00 # index to local symbols
- !hex 00 00 00 00 # number of local symbols
- !hex 00 00 00 00 # index to externally defined symbols
- !hex 01 00 00 00 # number of externally defined symbols
- !hex 01 00 00 00 # index to undefined symbols
- !hex 00 00 00 00 # number of undefined symbols
- !hex 00 00 00 00 # file offset to table of contents
- !hex 00 00 00 00 # number of entries in table of contents
- !hex 00 00 00 00 # file offset to module table
- !hex 00 00 00 00 # number of module table entries
- !hex 00 00 00 00 # offset to referenced symbol table
- !hex 00 00 00 00 # number of referenced symbol table entries
- !hex 00 00 00 00 # file offset to the indirect symbol table
- !hex 00 00 00 00 # number of indirect symbol table entries
- !hex 00 00 00 00 # offset to external relocation entries
- !hex 00 00 00 00 # number of external relocation entries
- !hex 00 00 00 00 # offset to local relocation entries
- !hex 00 00 00 00 # number of local relocation entries

# data section

- !assert-index 1424 # segment
- !hex 55 48 89 e5 b8 2a 00 00 00 5d c3 41 70 70 6c 65
- !hex 20 4c 4c 56 4d 20 76 65 72 73 69 6f 6e 20 38 2e
- !hex 31 2e 30 20 28 63 6c 61 6e 67 2d 38 30 32 2e 30
- !hex 2e 34 32 29 00 2d 00 2f 55 73 65 72 73 2f 6d 79
- !hex 6c 65 73 62 79 72 6e 65 2f 50 72 6f 6a 65 63 74
- !hex 73 2f 63 00 66 6f 6f 00 69 6e 74 00

- !assert-index 1516 # segment
- !hex 01 11 01 25
- !hex 0e 13 05 03 0e 10 17 1b 0e 11 01 12 06 00 00 02
- !hex 2e 00 11 01 12 06 40 18 03 0e 3a 0b 3b 0b 49 13
- !hex 3f 19 00 00 03 24 00 03 0e 3e 0b 0b 0b 00 00 00

- !assert-index 1568 # segement
- !hex 47 00 00 00 04 00 00 00 00 00 08 01 00 00 00 00
- !hex 0c 00 2a 00 00 00 00 00 00 00 2c 00 00 00 00 00
- !hex 00 00 00 00 00 00 0b 00 00 00 02 00 00 00 00 00
- !hex 00 00 00 0b 00 00 00 01 56 49 00 00 00 01 01 43
- !hex 00 00 00 03 4d 00 00 00 05 04 00

- !assert-index 1643 # segement
- !hex 00 48 53 41 48
- !hex 01 00 00 00 01 00 00 00 01 00 00 00 0c 00 00 00
- !hex 00 00 00 00 01 00 00 00 01 00 06 00 00 00 00 00
- !hex 89 73 88 0b 2c 00 00 00 49 00 00 00 01 00 00 00
- !hex 2a 00 00 00 00 00 00 00

- !assert-index 1704 # segment
- !hex 48 53 41 48 01 00 00 00
- !hex 01 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00
- !hex 01 00 00 00 01 00 06 00 ff ff ff ff

- !assert-index 1740 # segment
- !hex 48 53 41 48
- !hex 01 00 00 00 01 00 00 00 00 00 00 00 0c 00 00 00
- !hex 00 00 00 00 01 00 00 00 01 00 06 00 ff ff ff ff

- !assert-index 1776 # segment
- !hex 48 53 41 48 01 00 00 00 01 00 00 00 01 00 00 00
- !hex 14 00 00 00 00 00 00 00 03 00 00 00 01 00 06 00
- !hex 03 00 05 00 04 00 0b 00 00 00 00 00 30 80 88 0b
- !hex 34 00 00 00 4d 00 00 00 01 00 00 00 43 00 00 00
- !hex 24 00 00 00 00 00 00

- !assert-index 1847 # segment
- !hex 48 53 41 48 01 00 00 00 01
- !hex 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00 01
- !hex 00 00 00 07 00 06 00 ff ff ff ff 00 00 00 00 00

- !assert-index 1888 # segment
- !hex 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 01
- !hex 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

- !assert-index 1920 # segment
- !hex 14 00 00 00 00 00 00 00 01 7a 52 00 01 78 10 01
- !hex 10 0c 07 08 90 01 00 00 24 00 00 00 1c 00 00 00
- !hex f0 fd ff ff ff ff ff ff 0b 00 00 00 00 00 00 00
- !hex 00 41 0e 10 86 02 43 0d 06 00 00 00 00 00 00 00

- !assert-index 1984 # segment
- !hex 39 00 00 00 02 00 1e 00 00 00 01 01 fb 0e 0d 00
- !hex 01 01 01 01 00 00 00 01 00 00 01 00 3c 73 74 64
- !hex 69 6e 3e 00 00 00 00 00 00 09 02 00 00 00 00 00
- !hex 00 00 00 01 05 0d 0a 90 02 02 00 01 01

- !assert-index 2045 # segment
- !hex 00 00 00
- !hex 2b 00 00 00 01 00 00 06 1e 00 00 00 01 00 00 06
- !hex 00 00 00 00 01 00 00 06 2b 00 00 00 01 00 00 06

- !assert-index 2080 # segment
- !hex 01 00 00 00 0f 01 00 00 00 00 00 00 00 00 00 00

- !assert-index 2096 # segment
- !hex 00 5f 66 6f 6f 00 00 00
